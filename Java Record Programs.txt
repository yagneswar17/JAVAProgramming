1. Write a JAVA program to display default value of all primitive data type of JAVA
public class PDT 
{
    static boolean a;
    static double b;
    static float c;
    static int d;
    static long e;
    static String f;
    public static void main(String[] args) 
    {
        System.out.println("Default values are: ");
        System.out.println("Boolean = " + a);
        System.out.println("Double  = " + b);
        System.out.println("Float   = " + c);
        System.out.println("Int     = " + d);
        System.out.println("Long    = " + e);
        System.out.println("String  = " + f);
   }
}

2. Write a JAVA program to formatting the output.
public class FO 
{
   public static void main(String []args) 
   {
      String name = "Sree Charan";
      float per=98.82569f;
      String s1 = String.format("Name : %s", name);
      String s2 = String.format("Percentage = %f",per);
      String s3 = String.format("Result = %.2f",per);
      System.out.print(s1);
      System.out.print("\n");
      System.out.print(s2);
      System.out.print("\t");
      System.out.print(s3);
   }
}

3. Write a JAVA program to search for an element in a given list of elements using binary search mechanism.
import java.util.Scanner;
public class BS
{  
    public static void bsearch(int arr[], int first, int last, int key)
    {  
        int mid = (first + last)/2;  
        while( first <= last )
        {  
            if ( arr[mid] < key )
            {  
                first = mid + 1;     
            }
            else if ( arr[mid] == key )
            {  
                System.out.println("Element is found at index: " + mid);  
                break;  
            }
            else
            {  
                last = mid - 1;  
            }  
            mid = (first + last)/2;  
        }  
        if (first>last )
        {  
            System.out.println("Element is not found!");  
        }  
    }  
    public static void main(String args[])
    {  
        Scanner s=new Scanner(System.in);
        int arr[];  
        int i,key,size;  
        System.out.println("Enter Size : ");
        size=s.nextInt();
        int last=size-1;
        arr=new int[size];
        for(i=0;i<size;i++)
        {
            arr[i]=s.nextInt();
        }
        System.out.println("Enter Key: ");
        key=s.nextInt();
        bsearch(arr,0,last,key);     
    }  
}  


4. Write a JAVA program to sort for an element in a given list of elements using bubble sort

import java.util.Scanner;
public class BSort
{  
    static void bs(int[] arr,int n) 
    {  
        int i,j,temp = 0;  
        for(i=0;i<n;i++)
        {  
            for(j=1;j<(n-i);j++)
            {  
                if(arr[j-1] > arr[j])
                {  
                    temp = arr[j-1];  
                    arr[j-1] = arr[j];  
                    arr[j] = temp;  
                }  
            }  
        }  
    }  
    public static void main(String[] args) 
    {  
        Scanner s=new Scanner(System.in);
        int arr[];  
        int i,size;  
        System.out.println("Enter Size : ");
        size=s.nextInt();
        arr=new int[size];
        System.out.println("Enter array elements : ");
        for(i=0;i<size;i++)
        {
            arr[i]=s.nextInt();
        }
        System.out.println("Array Before Bubble Sort");  
        for(i=0;i<size;i++)
        {  
            System.out.print(arr[i] + " ");  
        }  
        System.out.println();  
        bs(arr,size);  
        System.out.println("Array After Bubble Sort");  
        for(i=0;i<size;i++)
        {  
            System.out.print(arr[i] + " ");  
        }  
    }  
}  


5. Write a JAVA program to sort for an element in a given list of elements using merge sort.

import java.util.Scanner;

public class MS  
{  
    static void mergesort(int arr[], int beg, int mid, int end)  
    {  
        int i,j,k;
        int l=mid-beg+1;
        int r=end-mid;  
        int LeftArray[]=new int[l];  
        int RightArray[]=new int[r];  
        for(i=0; i<l; ++i)
        {
            LeftArray[i] = arr[beg + i];
        }
        for (j=0;j<r;++j)
        {
            RightArray[j] = arr[mid + 1+ j];
        }
        i = 0;
        j = 0;  
        k = beg;  
        while (i<l&&j<r)  
        {  
            if (LeftArray[i] <= RightArray[j])  
            {  
                arr[k] = LeftArray[i];  
                i++;  
            }  
            else  
            {  
                arr[k] = RightArray[j];  
                j++;  
            }  
            k++;  
        }  
        while (i<l)  
        {  
            arr[k] = LeftArray[i];  
            i++;  
            k++;  
        } 
        while (j<r)  
        {  
            arr[k] = RightArray[j];  
            j++;  
            k++;  
        }  
    }  
    static void sort(int arr[], int beg, int end)  
    {  
        if (beg<end)  
        {  
            int mid = (beg+end)/2;  
            sort(arr, beg, mid);  
            sort(arr , mid+1, end);  
            mergesort(arr, beg, mid, end);  
        }  
    }  
    public static void main(String args[])  
    {  
        Scanner s=new Scanner(System.in);
        //MS ob = new MS(); 
        int arr[];  
        int i,size;  
        System.out.println("Enter Size : ");
        size=s.nextInt();
        arr=new int[size];
        System.out.println("Enter array elements : ");
        for(i=0;i<size;i++)
        {
            arr[i]=s.nextInt();
        }
        System.out.println("Array Before Merge Sort : ");  
        for(i=0;i<size;i++)
        {  
            System.out.print(arr[i] + " ");  
        }    
        sort(arr, 0, size-1);  
        System.out.println("\nArray After Merge Sort : ");  
        for(i =0; i<size;i++)  
        {        
            System.out.print(arr[i]+" ");  
        }  
    }  
}  

6. Write a JAVA program using String Buffer to delete, remove character.

import java.util.Scanner;
public class SBDR
{  
    public static void main(String[] args) 
    {  
        int start,end;
        Scanner s=new Scanner(System.in);
        System.out.print("Enter Any String : ");
        String str=s.nextLine();
        StringBuffer sb = new StringBuffer(str);  
        System.out.println("Before Deleting String : " + sb);  
        System.out.print("Enter Substring Starting and Ending Index : ");
        start=s.nextInt();
        end=s.nextInt();
        sb = sb.delete(start,end);  
        System.out.println("After Deleting Sting : " + sb);  
    }  
}  

7. Write a JAVA program to implement class mechanism. â€“ Create a class, methods and invoke them inside main method.

import java.util.Scanner;  
public class EvenOdd  
{  
    void findEvenOdd(int num)  
    {  
        if(num%2==0)   
            System.out.println(num+" is even");   
        else   
            System.out.println(num+" is odd");  
    }
    public static void main (String args[])  
    {  
        int num;
        Scanner scan=new Scanner(System.in);
        EvenOdd obj=new EvenOdd();
        System.out.print("Enter the number: ");  
        num=scan.nextInt();  
        obj.findEvenOdd(num);  
    }  
}  

8. Write a JAVA program to implement static keyword in all cases.

import java.util.Scanner;
public class VBMN
{  
    int roll;
    String name;
    static String college="Vignan";
    static
    {
        System.out.println("Welcome");
    }  
    static void change()
    {
        college="VIIT";
    }
    void get(int rn,String nm)
    {
        roll=rn;
        name=nm;
    }
    void display()
    {
        System.out.println("Roll No. : "+roll);
        System.out.println("Name : "+name);
        System.out.println("College Name : "+college);
    }
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int i,r,size,ch;
        String n;
        VBMN[] student;
        System.out.print("Enter number of students : ");
        size=s.nextInt();
        student=new VBMN [size];
        System.out.println("College Name : "+student[0].college);
        System.out.println("Do you want to change college name??");
        System.out.println("Enter '1' for yes or '0' for No : ");
        ch=s.nextInt();
        if(ch==1)
            VBMN.change();
        for(i=0;i<size;i++)
        {
            student[i]=new VBMN();
            System.out.println("Student "+(i+1));
            System.out.println("Enter Roll No. : ");
            r=s.nextInt();
            System.out.println("Enter Name : ");
            n=s.next();
            student[i].get(r,n);
        }
        System.out.println("Student Details are : ");  
        for(i=0;i<size;i++)
        {
            System.out.println("Student "+(i+1));
            student[i].display();
        }
    }  
}

9. Write a JAVA program to implement this keyword at variable and method level

import java.util.Scanner;
public class TK
{  
    int roll;
    String name;
    void display()
    {
        System.out.println("Student Details are : ");
        System.out.println("Roll No. : "+roll);
        System.out.println("Name : "+name);
    }
    void get(int roll,String name)
    {
        this.roll=roll;
        this.name=name;
        this.display();
    }
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int i,r,size;
        String n;
        TK[] student;
        System.out.println("Enter number of students : ");
        size=s.nextInt();
        student=new TK [size];
        for(i=0;i<size;i++)
        {
            student[i]=new TK();
            System.out.println("Student "+(i+1));
            System.out.println("Enter Roll No. : ");
            r=s.nextInt();
            System.out.println("Enter Name : ");
            n=s.next();
            student[i].get(r,n);
        }
    }  
}

10. Write a JAVA program to implement Matrix Transpose

import java.util.Scanner;
public class MT
{  
    public static void Display(int a[][],int row,int col)
    {
        for(int i=0;i<row;i++)
        {    
            for(int j=0;j<col;j++)
            {    
                System.out.print(a[i][j]+"\t");    
            }    
            System.out.println();
        }
    }
    public static void main(String args[])
    {  
        Scanner s= new Scanner(System.in);
        int r,c,i,j;    
        System.out.println("Enter row size : ");
        r=s.nextInt();
        System.out.println("Enter coloumn size : ");
        c=s.nextInt();
        int A[][]=new int[r][c];
        int B[][]=new int[c][r];
        System.out.println("Enter elements in matrix : ");
        for(i=0;i<r;i++)
        {    
            for(j=0;j<c;j++)
            {    
                A[i][j]=s.nextInt();
                B[j][i]=A[i][j];
            }    
        }  
        System.out.println("Printing Matrix Before Transpose:");  
        Display(A,r,c);
        System.out.println("Printing Matrix After Transpose:");  
        Display(B,c,r);
    }   
}  

11. Write a JAVA program to implement abstract class

import java.util.Scanner;
abstract class Shape
{  
    abstract void area(int a);  
}  
class Square extends Shape
{ 
    void area(int a)
    {
        System.out.println(" Area = "+(a*a));
    }  
}  
class Circle extends Shape
{  
    void area(int a)
    {
        System.out.println(" Area = "+(3.14*a*a));
    }  
}  
public class AC
{  
    public static void main(String args[])
    {  
        int opt,a;
        Scanner s= new Scanner(System.in);
        System.out.println("\n 1. Square \n 2. Circle ");
        System.out.println(" Enter Your Choice : ");
        opt=s.nextInt();
        if(opt==1)
        {
            Shape sqr=new Square();
            System.out.println(" Enter Length : ");
            a=s.nextInt();
            sqr.area(a);
        }
        else if(opt==2)
        {
            System.out.println(" Enter Radius : ");
            a=s.nextInt();
            Shape cir=new Circle();
            cir.area(a);
        }
        else
        {
            System.out.println("Invalid Choice!!!");
        }
    }  
}  

12. Write a JAVA program to implement Interfaces with inheritance

import java.util.Scanner;
interface Sum
{  
    void add(int a,int b);  
}  
interface Product
{  
    void mul(int a,int b);  
}  
public class Inter implements Sum,Product
{  
    public void add(int a,int b)
    {
            System.out.println(" Sum = "+(a+b));
    }  
    public void mul(int a,int b)  
    {
        System.out.println(" Product = "+(a*b));
    }  
    public static void main(String args[])
    {  
        int n1,n2;
        Scanner s=new Scanner(System.in);
        Inter obj = new Inter(); 
        System.out.println(" Enter 2 Numbers : ");
        n1=s.nextInt();
        n2=s.nextInt();
        obj.add(n1,n2);  
        obj.mul(n1,n2);  
    }  
}  

13. Write a JAVA program that describes exception handling mechanism

public class JavaExceptionExample{  
  public static void main(String args[]){  
   try{  
      //code that may raise exception  
      int data=100/0;  
   }catch(ArithmeticException e){System.out.println(e);}  
   //rest code of the program   
   System.out.println("rest of the code...");  
  }  
}  

14. Write a JAVA program Illustrating Multiple catch clauses

import java.util.Scanner;
public class MCC
{  
    public static void main(String[] args) 
    {  
        Scanner s=new Scanner(System.in);
        int opt;
        System.out.println(" Enter Your Choice (1,2,3): ");
        opt=s.nextInt();
        try
        {    
            if(opt==1)
            {
                int a[]=new int[5];    
                a[5]=30/0;
            }
            else if(opt==2)
            {
                String str=null;  
                System.out.println(str.length());
            }
            else if(opt==3)
            {
                int b[]=new int[5];    
                System.out.println(b[10]);  
            }
            else
            {
                System.out.println(" Invalid Choice!!!");
            }
        }
        catch(ArithmeticException e)  
        {   
            System.out.println(" Arithmetic Exception occurs");  
        }    
        catch(ArrayIndexOutOfBoundsException e)  
        {  
            System.out.println(" Array Index Out Of Bounds Exception occurs");  
        }    
        catch(Exception e)  
        {  
            System.out.println(" Parent Exception occurs");  
        }             
        System.out.println(" Done!!!");    
    }  
}  

15. Write a JAVA program to implement finally block

public class TestFinallyBlock2{  
  public static void main(String args[]){  
  try{  
   int data=25/0;  
   System.out.println(data);  
  }  
  catch(ArithmeticException e){System.out.println(e);}  
  finally{System.out.println("finally block is always executed");}  
  System.out.println("rest of the code...");  
  }  
}  

16. Write a JAVA program for creation of Illustrating throw and throws

public  class ThrowsExecp 
{ 
	static void fun() throws IllegalAccessException 
	{ 
		System.out.println("Inside fun(). "); 
		throw new IllegalAccessException("demo");
	} 
	public static void main(String args[]) 
	{ 
		try
		{ 
			fun(); 
		} 
		catch(IllegalAccessException e) 
		{ 
			System.out.println("caught in main."); 
		}
	} 
} 

17. Write a JAVA program for creation of User Defined Exception

import java.util.Scanner;
class InvalidAgeException extends Exception
{  
    InvalidAgeException(String s)
    {  
        super(s);  
    }  
} 
public class UDE
{  
   static void validate(int age)throws InvalidAgeException
   {  
     if(age<18)  
        throw new InvalidAgeException("\n Under Age Can't Vote ");  
     else  
        System.out.println(" Welcome To Vote ");  
   }  
   public static void main(String args[])
   {  
        int age;
        Scanner s=new Scanner(System.in);
        System.out.println(" Enter Age : ");
        age=s.nextInt();
        try
        {  
            validate(age);  
        }
        catch(Exception m)
        {
            System.out.println(" Exception occured: "+m);
        }  
        System.out.println(" Done!!!");  
    }  
} 